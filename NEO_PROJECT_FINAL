{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["d685fbm4ieG2","YmaDFR01jx5-","COvOEPOLj3nu"],"toc_visible":true,"authorship_tag":"ABX9TyMq6RbhGMt7TGpF7uXcgiJq"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mCkz5KAMdhls","executionInfo":{"status":"ok","timestamp":1723615139468,"user_tz":-330,"elapsed":65439,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"534a33e7-da1e-48b9-9353-c1af03d19881"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting pyspark\n","  Downloading pyspark-3.5.2.tar.gz (317.3 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m317.3/317.3 MB\u001b[0m \u001b[31m3.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: py4j in /usr/local/lib/python3.10/dist-packages (0.10.9.7)\n","Building wheels for collected packages: pyspark\n","  Building wheel for pyspark (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyspark: filename=pyspark-3.5.2-py2.py3-none-any.whl size=317812365 sha256=08f13efa0d23af991fca0d9adc157473a19952ee65e5a38e64db122f0a1fbefd\n","  Stored in directory: /root/.cache/pip/wheels/34/34/bd/03944534c44b677cd5859f248090daa9fb27b3c8f8e5f49574\n","Successfully built pyspark\n","Installing collected packages: pyspark\n","Successfully installed pyspark-3.5.2\n"]}],"source":["!pip install pyspark py4j\n","from pyspark.sql import SparkSession\n","spark = SparkSession.builder.appName(\"Basics\").getOrCreate()"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fdtD0J-Idq6Q","executionInfo":{"status":"ok","timestamp":1723615213479,"user_tz":-330,"elapsed":74025,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"a58b7c62-2bc8-4600-dd56-8b4989412e4b"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["# Path to the CSV file.\n","file_path = \"/content/drive/MyDrive/nearest-earth-objects(1910-2024).csv\"\n","\n","\n","# Read the CSV file into a DataFrame.\n","neo = spark.read.csv(file_path, header=True, inferSchema=True)\n","\n","# Show the first few Rows of the DataFrame.\n","neo.show(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DhHkdwNMdyP6","executionInfo":{"status":"ok","timestamp":1723615268924,"user_tz":-330,"elapsed":15129,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"9ed5e1f7-2824-456b-c5bf-7cf8eb105323"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["+-------+------------------+------------------+----------------------+----------------------+-------------+-----------------+-------------+------------+\n","| neo_id|              name|absolute_magnitude|estimated_diameter_min|estimated_diameter_max|orbiting_body|relative_velocity|miss_distance|is_hazardous|\n","+-------+------------------+------------------+----------------------+----------------------+-------------+-----------------+-------------+------------+\n","|2162117|162117 (1998 SD15)|             19.14|           0.394961694|           0.883161196|        Earth|      71745.40105|5.814362332E7|       false|\n","|2349507|  349507 (2008 QY)|              18.5|           0.530340723|           1.185877909|        Earth|      109949.7571|5.580104782E7|        true|\n","|2455415|  455415 (2003 GA)|             21.45|           0.136318556|           0.304817558|        Earth|       24865.5068|6.720688772E7|       false|\n","|3132126|         (2002 PB)|             20.63|           0.198863453|             0.4446722|        Earth|      78890.07681|3.039644412E7|       false|\n","|3557844|         (2011 DW)|              22.7|           0.076657557|           0.171411509|        Earth|      56036.51948|6.311862651E7|       false|\n","|3656926|        (2014 BT8)|              25.0|               0.02658|           0.059434687|        Earth|      47477.64983|4.290521418E7|       false|\n","|3421513|        (2008 OX1)|              21.5|           0.133215567|           0.297879063|        Earth|      57853.29535|2.727908127E7|        true|\n","|3541504|      (2010 OF101)|             19.75|           0.298232505|           0.666868155|        Earth|      46972.48679|6.997593131E7|       false|\n","|3836942|         (2018 YH)|              21.7|           0.121494041|           0.271668934|        Earth|      37424.54838|  5657726.907|        true|\n","|3892166|       (2019 UP13)|             23.45|           0.054269395|           0.121350055|        Earth|      38524.86787|6.166118456E7|       false|\n","+-------+------------------+------------------+----------------------+----------------------+-------------+-----------------+-------------+------------+\n","only showing top 10 rows\n","\n"]}]},{"cell_type":"code","source":["# Print all the Columns of the NEO DataFrame.\n","neo.printSchema()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zdwZFw5TeZJq","executionInfo":{"status":"ok","timestamp":1723615276203,"user_tz":-330,"elapsed":421,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"9d144fc9-ab08-4b3d-826e-aa9e0c376026"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["root\n"," |-- neo_id: integer (nullable = true)\n"," |-- name: string (nullable = true)\n"," |-- absolute_magnitude: double (nullable = true)\n"," |-- estimated_diameter_min: double (nullable = true)\n"," |-- estimated_diameter_max: double (nullable = true)\n"," |-- orbiting_body: string (nullable = true)\n"," |-- relative_velocity: double (nullable = true)\n"," |-- miss_distance: double (nullable = true)\n"," |-- is_hazardous: boolean (nullable = true)\n","\n"]}]},{"cell_type":"code","source":["# Print the First 20 Rows of the NEO DataFrame.\n","neo.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P4iTLSEbeehp","executionInfo":{"status":"ok","timestamp":1723615278624,"user_tz":-330,"elapsed":741,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"bcd9f618-a54a-449a-8d3d-d6f675d54cb1"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["+--------+-------------------+------------------+----------------------+----------------------+-------------+-----------------+-------------+------------+\n","|  neo_id|               name|absolute_magnitude|estimated_diameter_min|estimated_diameter_max|orbiting_body|relative_velocity|miss_distance|is_hazardous|\n","+--------+-------------------+------------------+----------------------+----------------------+-------------+-----------------+-------------+------------+\n","| 2162117| 162117 (1998 SD15)|             19.14|           0.394961694|           0.883161196|        Earth|      71745.40105|5.814362332E7|       false|\n","| 2349507|   349507 (2008 QY)|              18.5|           0.530340723|           1.185877909|        Earth|      109949.7571|5.580104782E7|        true|\n","| 2455415|   455415 (2003 GA)|             21.45|           0.136318556|           0.304817558|        Earth|       24865.5068|6.720688772E7|       false|\n","| 3132126|          (2002 PB)|             20.63|           0.198863453|             0.4446722|        Earth|      78890.07681|3.039644412E7|       false|\n","| 3557844|          (2011 DW)|              22.7|           0.076657557|           0.171411509|        Earth|      56036.51948|6.311862651E7|       false|\n","| 3656926|         (2014 BT8)|              25.0|               0.02658|           0.059434687|        Earth|      47477.64983|4.290521418E7|       false|\n","| 3421513|         (2008 OX1)|              21.5|           0.133215567|           0.297879063|        Earth|      57853.29535|2.727908127E7|        true|\n","| 3541504|       (2010 OF101)|             19.75|           0.298232505|           0.666868155|        Earth|      46972.48679|6.997593131E7|       false|\n","| 3836942|          (2018 YH)|              21.7|           0.121494041|           0.271668934|        Earth|      37424.54838|  5657726.907|        true|\n","| 3892166|        (2019 UP13)|             23.45|           0.054269395|           0.121350055|        Earth|      38524.86787|6.166118456E7|       false|\n","|54245816|         (2022 CM3)|             26.02|            0.01661709|           0.037156943|        Earth|      45125.61205|3.422388307E7|       false|\n","| 2627157|  627157 (2008 OX1)|              21.5|           0.133215567|           0.297879063|        Earth|      57853.29574|2.727908074E7|        true|\n","|54418652|          (2024 AF)|             23.76|           0.047049496|           0.105205872|        Earth|      19121.33491|1.244444777E7|       false|\n","| 2162635|162635 (2000 SS164)|             16.71|           1.209358264|           2.704207287|        Earth|      12703.78857|6.958943244E7|       false|\n","| 3559741|        (2011 EE41)|              24.3|           0.036690614|           0.082042707|        Earth|      67828.78588|7.130795384E7|       false|\n","|54193347|         (2021 RA4)|             24.32|           0.036354232|           0.081290534|        Earth|      45162.15576|4.036684287E7|       false|\n","|54245582|         (2022 CQ2)|              24.9|           0.027832677|           0.062235757|        Earth|      40238.01906| 1.06751581E7|       false|\n","| 2277810| 277810 (2006 FV35)|             21.72|           0.120380177|           0.269178258|        Earth|      31504.10093|4.350790896E7|       false|\n","| 2284422|   284422 (2006 YD)|             17.36|           0.896509666|           2.004656557|        Earth|      99804.73902|5.519529579E7|       false|\n","| 2357439| 357439 (2004 BL86)|             19.29|           0.368599699|           0.824213984|        Earth|      59133.77659|  7266531.842|        true|\n","+--------+-------------------+------------------+----------------------+----------------------+-------------+-----------------+-------------+------------+\n","only showing top 20 rows\n","\n"]}]},{"cell_type":"code","source":["# Summary of NEO DataFrame.\n","neo.describe().show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"F0jVme-zee5r","executionInfo":{"status":"ok","timestamp":1723615297560,"user_tz":-330,"elapsed":11052,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"331f4e40-3170-45a0-cbcc-78183918ce99"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["+-------+--------------------+--------------------+------------------+----------------------+----------------------+-------------+------------------+--------------------+\n","|summary|              neo_id|                name|absolute_magnitude|estimated_diameter_min|estimated_diameter_max|orbiting_body| relative_velocity|       miss_distance|\n","+-------+--------------------+--------------------+------------------+----------------------+----------------------+-------------+------------------+--------------------+\n","|  count|              338199|              338199|            338171|                338171|                338171|       338199|            338199|              338199|\n","|   mean|1.7599388682018574E7|                NULL|22.932524959267305|   0.15781204668950827|    0.3528784640395941|         NULL|  51060.6629076077| 4.153535093219146E7|\n","| stddev| 2.287224642893176E7|                NULL| 2.911216390292271|   0.31388513787547195|    0.7018685054245339|         NULL|26399.238434933184|2.0773990246098276E7|\n","|    min|             2000433|           (1979 XB)|              9.25|            5.11158E-4|           0.001142984|        Earth|       203.3464325|         6745.532516|\n","|    max|            54462807|99942 Apophis (20...|             33.58|           37.54524794|           83.95372662|        Earth|       291781.1066|       7.479865145E7|\n","+-------+--------------------+--------------------+------------------+----------------------+----------------------+-------------+------------------+--------------------+\n","\n"]}]},{"cell_type":"code","source":["# Counting the Number of Rows.\n","neo.count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nsMflQ21ehJO","executionInfo":{"status":"ok","timestamp":1723615306425,"user_tz":-330,"elapsed":1143,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"742cbc42-db1d-4835-ae07-81b13ae1817f"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["338199"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["# Showing Distinct (Unique) Values of neo_id\n","neo.select(\"neo_id\").distinct().count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hEG4M9Pjelt7","executionInfo":{"status":"ok","timestamp":1723615314589,"user_tz":-330,"elapsed":2791,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"eeac98c1-e516-4cfa-97b0-bee0e814a323"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["33514"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["neo.select(\"name\").distinct().count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xeUQ_6-senS8","executionInfo":{"status":"ok","timestamp":1723615349755,"user_tz":-330,"elapsed":1910,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"ebdf05b0-2d02-4a54-e56b-cae54711700d"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["33514"]},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["# Finding the NULL Values in the Features."],"metadata":{"id":"5s75XHa_e0H6"}},{"cell_type":"code","source":["# Importing Functions.\n","from pyspark.sql.functions import col, isnan, when, count"],"metadata":{"id":"F5fxSX5sewHU","executionInfo":{"status":"ok","timestamp":1723615375126,"user_tz":-330,"elapsed":413,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["null_counts_magnitude = neo.select([count(when(col(\"absolute_magnitude\").isNull() | isnan(\"absolute_magnitude\"), absolute_magnitude)).alias(\"absolute_magnitude\") for absolute_magnitude in neo.columns ])\n","\n","null_counts_magnitude.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tILuMC10e2qA","executionInfo":{"status":"ok","timestamp":1723615427673,"user_tz":-330,"elapsed":2472,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"f0611859-9c7a-4055-f089-74af45cb9e20"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["+------------------+------------------+------------------+------------------+------------------+------------------+------------------+------------------+------------------+\n","|absolute_magnitude|absolute_magnitude|absolute_magnitude|absolute_magnitude|absolute_magnitude|absolute_magnitude|absolute_magnitude|absolute_magnitude|absolute_magnitude|\n","+------------------+------------------+------------------+------------------+------------------+------------------+------------------+------------------+------------------+\n","|                28|                28|                28|                28|                28|                28|                28|                28|                28|\n","+------------------+------------------+------------------+------------------+------------------+------------------+------------------+------------------+------------------+\n","\n"]}]},{"cell_type":"code","source":["null_counts_dia_max = neo.select([count(when(col(\"estimated_diameter_max\").isNull() | isnan(\"estimated_diameter_max\"), estimated_diameter_max)).alias(\"estimated_diameter_max\") for estimated_diameter_max in neo.columns])\n","\n","null_counts_dia_max.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ccD4Kszse4pF","executionInfo":{"status":"ok","timestamp":1723615444238,"user_tz":-330,"elapsed":1618,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"2e107d29-fb3f-4207-fdeb-3cb8f9f104f6"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+\n","|estimated_diameter_max|estimated_diameter_max|estimated_diameter_max|estimated_diameter_max|estimated_diameter_max|estimated_diameter_max|estimated_diameter_max|estimated_diameter_max|estimated_diameter_max|\n","+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+\n","|                    28|                    28|                    28|                    28|                    28|                    28|                    28|                    28|                    28|\n","+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+\n","\n"]}]},{"cell_type":"code","source":["null_counts_dia_min = neo.select([count(when(col(\"estimated_diameter_min\").isNull() | isnan(\"estimated_diameter_min\"), estimated_diameter_min)).alias(\"estimated_diameter_min\") for estimated_diameter_min in neo.columns])\n","\n","null_counts_dia_min.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rlByM17efHQo","executionInfo":{"status":"ok","timestamp":1723615454587,"user_tz":-330,"elapsed":2186,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"bf699442-c04a-4139-c10f-b0628754321a"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+\n","|estimated_diameter_min|estimated_diameter_min|estimated_diameter_min|estimated_diameter_min|estimated_diameter_min|estimated_diameter_min|estimated_diameter_min|estimated_diameter_min|estimated_diameter_min|\n","+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+\n","|                    28|                    28|                    28|                    28|                    28|                    28|                    28|                    28|                    28|\n","+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+\n","\n"]}]},{"cell_type":"markdown","source":["# Calculating MEDIAN Values of the Features."],"metadata":{"id":"-F9il1KFfMoN"}},{"cell_type":"code","source":["from pyspark.sql.types import DoubleType, StructField, StructType"],"metadata":{"id":"taqovVM3fJow","executionInfo":{"status":"ok","timestamp":1723615503724,"user_tz":-330,"elapsed":432,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["from pyspark.sql.functions import mean\n","from pyspark.sql.types import DoubleType"],"metadata":{"id":"qY_5cKSnfWEb","executionInfo":{"status":"ok","timestamp":1723615510448,"user_tz":-330,"elapsed":453,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["from pyspark.sql.functions import col\n","from pyspark.sql.types import DoubleType\n","\n","# Check if the \"absolute_magnitude\" column exists and is of type DoubleType\n","if \"absolute_magnitude\" in neo.columns and isinstance(neo.schema[\"absolute_magnitude\"].dataType, DoubleType):\n","    # Calculate the median of the \"absolute_magnitude\" column\n","    median_value = neo.approxQuantile(\"absolute_magnitude\", [0.5], 0.01)[0]\n","\n","    # Fill missing values in the \"absolute_magnitude\" column with the median value\n","    neo = neo.fillna({\"absolute_magnitude\": median_value})\n","\n","    # Show the updated DataFrame\n","    neo.select(\"absolute_magnitude\").show()\n","else:\n","    print(\"Column 'absolute_magnitude' does not exist or is not of type DoubleType.\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UjKIANXufXtK","executionInfo":{"status":"ok","timestamp":1723615904320,"user_tz":-330,"elapsed":3790,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"67b5eb15-7d62-44c4-b68c-f28d03903843"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["+------------------+\n","|absolute_magnitude|\n","+------------------+\n","|             19.14|\n","|              18.5|\n","|             21.45|\n","|             20.63|\n","|              22.7|\n","|              25.0|\n","|              21.5|\n","|             19.75|\n","|              21.7|\n","|             23.45|\n","|             26.02|\n","|              21.5|\n","|             23.76|\n","|             16.71|\n","|              24.3|\n","|             24.32|\n","|              24.9|\n","|             21.72|\n","|             17.36|\n","|             19.29|\n","+------------------+\n","only showing top 20 rows\n","\n"]}]},{"cell_type":"code","source":["# Check if the \"estimated_diameter_min\" column exists and is of type DoubleType\n","if \"estimated_diameter_min\" in neo.columns and isinstance(neo.schema[\"estimated_diameter_min\"].dataType, DoubleType):\n","    # Calculate the median of the \"estimated_diameter_min\" column\n","    median_value = neo.approxQuantile(\"estimated_diameter_min\", [0.5], 0.01)[0]\n","\n","    # Fill missing values in the \"estimated_diameter_min\" column with the median value\n","    neo = neo.fillna({\"estimated_diameter_min\": median_value})\n","\n","    # Show the updated DataFrame\n","    neo.select(\"estimated_diameter_min\").show()\n","else:\n","    print(\"Column 'estimated_diameter_min' does not exist or is not of type DoubleType.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QykRMSY2fjDs","executionInfo":{"status":"ok","timestamp":1723615990098,"user_tz":-330,"elapsed":2253,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"96a49723-e1c9-413d-b68b-f031c92b8e62"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["+----------------------+\n","|estimated_diameter_min|\n","+----------------------+\n","|           0.394961694|\n","|           0.530340723|\n","|           0.136318556|\n","|           0.198863453|\n","|           0.076657557|\n","|               0.02658|\n","|           0.133215567|\n","|           0.298232505|\n","|           0.121494041|\n","|           0.054269395|\n","|            0.01661709|\n","|           0.133215567|\n","|           0.047049496|\n","|           1.209358264|\n","|           0.036690614|\n","|           0.036354232|\n","|           0.027832677|\n","|           0.120380177|\n","|           0.896509666|\n","|           0.368599699|\n","+----------------------+\n","only showing top 20 rows\n","\n"]}]},{"cell_type":"code","source":["# Check if the \"estimated_diameter_max\" column exists and is of type DoubleType\n","if \"estimated_diameter_max\" in neo.columns and isinstance(neo.schema[\"estimated_diameter_max\"].dataType, DoubleType):\n","    # Calculate the median of the \"estimated_diameter_max\" column\n","    median_value = neo.approxQuantile(\"estimated_diameter_max\", [0.5], 0.01)[0]\n","\n","    # Fill missing values in the \"estimated_diameter_max\" column with the median value\n","    neo = neo.fillna({\"estimated_diameter_max\": median_value})\n","\n","    # Show the updated DataFrame\n","    neo.select(\"estimated_diameter_max\").show()\n","else:\n","    print(\"Column 'estimated_diameter_max' does not exist or is not of type DoubleType.\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ySH9MhSZhGgR","executionInfo":{"status":"ok","timestamp":1723616189554,"user_tz":-330,"elapsed":2261,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"02557b7b-a4b1-44dc-b38a-66ba2f0a8118"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["+----------------------+\n","|estimated_diameter_max|\n","+----------------------+\n","|           0.883161196|\n","|           1.185877909|\n","|           0.304817558|\n","|             0.4446722|\n","|           0.171411509|\n","|           0.059434687|\n","|           0.297879063|\n","|           0.666868155|\n","|           0.271668934|\n","|           0.121350055|\n","|           0.037156943|\n","|           0.297879063|\n","|           0.105205872|\n","|           2.704207287|\n","|           0.082042707|\n","|           0.081290534|\n","|           0.062235757|\n","|           0.269178258|\n","|           2.004656557|\n","|           0.824213984|\n","+----------------------+\n","only showing top 20 rows\n","\n"]}]},{"cell_type":"markdown","source":["# Spark Hive Integration"],"metadata":{"id":"d685fbm4ieG2"}},{"cell_type":"code","source":["from pyspark.sql import SparkSession\n","\n","# Initialize SparkSession with Hive support\n","spark = SparkSession.builder \\\n","    .appName(\"Spark-Hive Integration\") \\\n","    .enableHiveSupport() \\\n","    .getOrCreate()\n"],"metadata":{"id":"AdXFHdIDizOQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# List all tables in the default database\n","spark.sql(\"SHOW TABLES\").show()\n","\n","# Verify the specific table\n","spark.sql(\"SHOW TABLES LIKE 'neo'\").show()"],"metadata":{"id":"kA3xVUunjokx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Read data from the Hive table into a DataFrame\n","df = spark.sql(\"SELECT * FROM default.neo\")\n","\n","# Show the DataFrame\n","df.show()\n"],"metadata":{"id":"sw4Z1Z0djrM_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Define the schema for the new Hive table\n","df.write.mode(\"overwrite\").saveAsTable(\"default.neo_copy\")\n"],"metadata":{"id":"rX-BtkSTjsY_"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Filtering Records for Hazardous object"],"metadata":{"id":"YmaDFR01jx5-"}},{"cell_type":"code","source":["# Filter the DataFrame for hazardous objects\n","hazardous_neo = spark.sql(\"SELECT * FROM default.neo WHERE is_hazardous = true\")\n","\n","# Show the hazardous near-Earth objects\n","hazardous_neo.show()\n"],"metadata":{"id":"4MeblrCgjsWQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Average values of Diameter_max"],"metadata":{"id":"COvOEPOLj3nu"}},{"cell_type":"code","source":["# Calculate average estimated diameter max\n","avg_diameter_max = spark.sql(\"SELECT AVG(estimated_diameter_max) AS avg_diameter_max FROM default.neo\")\n","avg_diameter_max.show()"],"metadata":{"id":"tV2QHhOMjsTh"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Average values of Diameter_min"],"metadata":{"id":"h1bpVJb6j-CQ"}},{"cell_type":"code","source":["# Calculate average estimated diameter min\n","avg_diameter_min = spark.sql(\"SELECT AVG(estimated_diameter_min) AS avg_diameter_min FROM default.neo\")\n","avg_diameter_min.show()"],"metadata":{"id":"XR3ropVxjsRB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Check for remaining NULL values in 'absolute_magnitude'\n","null_counts_updated = spark.sql(\"SELECT COUNT(*) AS null_count FROM default.neo WHERE absolute_magnitude IS NULL\")\n","null_counts_updated.show()\n"],"metadata":{"id":"MMgX_5REjsOe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Save DataFrame to a CSV file\n","neo.write.mode(\"overwrite\").csv(\"/home/talentum/shared/NEO_Project/NEO_CLEAN_NEW.csv\")\n","\n","# Save to a different Hive table\n","neo.write.mode(\"overwrite\").saveAsTable(\"default.neo_processed\")"],"metadata":{"id":"xn769Wb3jsMC"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Removing Outliers"],"metadata":{"id":"IQEVxVXNlhtE"}},{"cell_type":"code","source":["from pyspark.sql.functions import col, mean, stddev\n","\n","# Select numerical columns for outlier removal\n","numerical_cols = ['absolute_magnitude','estimated_diameter_min', 'estimated_diameter_max', 'relative_velocity',\n","                  'miss_distance']\n","\n","# Calculate bounds for outlier removal (e.g., 3 standard deviations)\n","bounds = {}\n","for col_name in numerical_cols:\n","    quantiles = neo.approxQuantile(col_name, [0.25, 0.75], 0.05)\n","    IQR = quantiles[1] - quantiles[0]\n","    lower_bound = quantiles[0] - 1.5 * IQR\n","    upper_bound = quantiles[1] + 1.5 * IQR\n","    bounds[col_name] = (lower_bound, upper_bound)\n","\n","# Remove outliers\n","neo = neo\n","for col_name in numerical_cols:\n","    neo = neo.filter(\n","        (col(col_name) >= bounds[col_name][0]) & (col(col_name) <= bounds[col_name][1])\n","    )\n","\n","# Show the DataFrame without outliers\n","neo.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pK710a-pllb5","executionInfo":{"status":"ok","timestamp":1723617229034,"user_tz":-330,"elapsed":9337,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"fbb5fdc5-2c1f-4f91-a896-8153f12deb30"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["+--------+------------------+------------------+----------------------+----------------------+-------------+-----------------+-------------+------------+\n","|  neo_id|              name|absolute_magnitude|estimated_diameter_min|estimated_diameter_max|orbiting_body|relative_velocity|miss_distance|is_hazardous|\n","+--------+------------------+------------------+----------------------+----------------------+-------------+-----------------+-------------+------------+\n","| 2162117|162117 (1998 SD15)|             19.14|           0.394961694|           0.883161196|        Earth|      71745.40105|5.814362332E7|       false|\n","| 2455415|  455415 (2003 GA)|             21.45|           0.136318556|           0.304817558|        Earth|       24865.5068|6.720688772E7|       false|\n","| 3132126|         (2002 PB)|             20.63|           0.198863453|             0.4446722|        Earth|      78890.07681|3.039644412E7|       false|\n","| 3557844|         (2011 DW)|              22.7|           0.076657557|           0.171411509|        Earth|      56036.51948|6.311862651E7|       false|\n","| 3656926|        (2014 BT8)|              25.0|               0.02658|           0.059434687|        Earth|      47477.64983|4.290521418E7|       false|\n","| 3421513|        (2008 OX1)|              21.5|           0.133215567|           0.297879063|        Earth|      57853.29535|2.727908127E7|        true|\n","| 3541504|      (2010 OF101)|             19.75|           0.298232505|           0.666868155|        Earth|      46972.48679|6.997593131E7|       false|\n","| 3836942|         (2018 YH)|              21.7|           0.121494041|           0.271668934|        Earth|      37424.54838|  5657726.907|        true|\n","| 3892166|       (2019 UP13)|             23.45|           0.054269395|           0.121350055|        Earth|      38524.86787|6.166118456E7|       false|\n","|54245816|        (2022 CM3)|             26.02|            0.01661709|           0.037156943|        Earth|      45125.61205|3.422388307E7|       false|\n","| 2627157| 627157 (2008 OX1)|              21.5|           0.133215567|           0.297879063|        Earth|      57853.29574|2.727908074E7|        true|\n","|54418652|         (2024 AF)|             23.76|           0.047049496|           0.105205872|        Earth|      19121.33491|1.244444777E7|       false|\n","| 3559741|       (2011 EE41)|              24.3|           0.036690614|           0.082042707|        Earth|      67828.78588|7.130795384E7|       false|\n","|54193347|        (2021 RA4)|             24.32|           0.036354232|           0.081290534|        Earth|      45162.15576|4.036684287E7|       false|\n","|54245582|        (2022 CQ2)|              24.9|           0.027832677|           0.062235757|        Earth|      40238.01906| 1.06751581E7|       false|\n","| 2277810|277810 (2006 FV35)|             21.72|           0.120380177|           0.269178258|        Earth|      31504.10093|4.350790896E7|       false|\n","| 2357439|357439 (2004 BL86)|             19.29|           0.368599699|           0.824213984|        Earth|      59133.77659|  7266531.842|        true|\n","| 3639467|        (2013 LC1)|              23.9|            0.04411182|           0.098637028|        Earth|      44783.19122|5.040936811E7|       false|\n","|54110699|        (2021 CZ2)|             22.45|           0.086011194|           0.192326877|        Earth|      100358.5948|6.804644892E7|       false|\n","| 3274691|         (2005 FC)|              24.5|           0.033462237|           0.074823838|        Earth|      27818.61491|4.000241218E7|       false|\n","+--------+------------------+------------------+----------------------+----------------------+-------------+-----------------+-------------+------------+\n","only showing top 20 rows\n","\n"]}]},{"cell_type":"markdown","source":["# Visualization"],"metadata":{"id":"C5F63V7_kVBd"}},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns"],"metadata":{"id":"onKeP8iSjsI3","executionInfo":{"status":"ok","timestamp":1723617240881,"user_tz":-330,"elapsed":445,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["# Count plot of hazardous vs non-hazardous NEOs\n","neo_pandas = neo.toPandas()\n","\n","plt.figure(figsize=(8, 6))\n","sns.countplot(x='is_hazardous', data=neo_pandas)\n","plt.title('Hazardous vs Non-Hazardous NEOs')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"kwNDjFfZjsA1","executionInfo":{"status":"ok","timestamp":1723617253118,"user_tz":-330,"elapsed":10721,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"6da08b41-0ea3-4e83-836b-f5d5d8491b8c"},"execution_count":36,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["numeric_df = neo_pandas.select_dtypes(include=[np.number])\n","plt.figure(figsize=(10, 8))\n","sns.heatmap(numeric_df.corr(), annot=True, cmap='coolwarm', linewidths=0.5)\n","plt.title('Correlation Heatmap')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":854},"id":"wcYmTEvgkmIn","executionInfo":{"status":"ok","timestamp":1723617263947,"user_tz":-330,"elapsed":1203,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"aa81d757-bddb-475a-c04f-e4c301a6a046"},"execution_count":37,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x800 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Logistic Regression Algorithm"],"metadata":{"id":"sDkKVgS9mKzg"}},{"cell_type":"code","source":["from pyspark.ml.classification import LogisticRegression\n","from pyspark.ml.evaluation import MulticlassClassificationEvaluator\n","from pyspark.ml.feature import VectorAssembler, StandardScaler, StringIndexer\n","from pyspark.sql.functions import col\n","from pyspark.ml import Pipeline\n","from pyspark.sql.types import IntegerType\n","\n","# Select relevant columns and cast the label to integer\n","neo_df = neo.select(\"name\",\"absolute_magnitude\", \"estimated_diameter_min\", \"estimated_diameter_max\",\n","                       \"relative_velocity\", \"miss_distance\", \"is_hazardous\")\n","\n","# Convert the boolean column 'is_hazardous' to integer\n","neo_df = neo_df.withColumn(\"is_hazardous\", col(\"is_hazardous\").cast(IntegerType()))\n","\n","# Define the feature columns\n","feature_columns = [\"absolute_magnitude\", \"estimated_diameter_min\", \"estimated_diameter_max\",\n","                   \"relative_velocity\", \"miss_distance\"]\n","\n","# Create a VectorAssembler to combine feature columns into a single feature vector\n","assembler = VectorAssembler(inputCols=feature_columns, outputCol=\"assembled_features\")\n","\n","# Create a StandardScaler to scale the feature vector\n","scaler = StandardScaler(inputCol=\"assembled_features\", outputCol=\"features\")\n","\n","# Create a StringIndexer for the label column\n","label_indexer = StringIndexer(inputCol=\"is_hazardous\", outputCol=\"label\")\n","\n","# Create a LogisticRegression model\n","lr = LogisticRegression(featuresCol=\"features\", labelCol=\"label\")\n","\n","# Create a Pipeline with the assembler, scaler, and logistic regression model\n","lr_pipeline = Pipeline(stages=[assembler, scaler, label_indexer, lr])\n","\n","# Split the data into training and test sets\n","train_neo, test_neo = neo_df.randomSplit([0.7, 0.3], seed=42)\n","\n","# Train the Logistic Regression model\n","lr_model = lr_pipeline.fit(train_neo)\n","\n","# Make predictions on the test data\n","lr_predictions = lr_model.transform(test_neo)\n","\n","evaluator = MulticlassClassificationEvaluator(labelCol=\"is_hazardous\", predictionCol=\"prediction\", metricName=\"accuracy\")\n","accuracy = evaluator.evaluate(lr_predictions)\n","print(f\"Test set accuracy = {accuracy:.4f}\")\n","\n","# Show predictions\n","# lr_predictions.select(\"absolute_magnitude\",\"estimated_diameter_min\",\"estimated_diameter_max\",\"relative_velocity\",\"miss_distance\",\"name\", \"is_hazardous\", \"prediction\", \"probability\").show(50)\n","lr_predictions.show(50)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9HIEyfL7kosy","executionInfo":{"status":"ok","timestamp":1723617372322,"user_tz":-330,"elapsed":56107,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"0eb11aa4-77e3-45af-f729-0675b9c97d93"},"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["Test set accuracy = 0.8898\n","+----------+------------------+----------------------+----------------------+-----------------+-------------+------------+--------------------+--------------------+-----+--------------------+--------------------+----------+\n","|      name|absolute_magnitude|estimated_diameter_min|estimated_diameter_max|relative_velocity|miss_distance|is_hazardous|  assembled_features|            features|label|       rawPrediction|         probability|prediction|\n","+----------+------------------+----------------------+----------------------+-----------------+-------------+------------+--------------------+--------------------+-----+--------------------+--------------------+----------+\n","| (1983 LC)|             19.45|           0.342416731|           0.765667087|      60699.95213|  4366212.352|           1|[19.45,0.34241673...|[7.67906245525185...|  1.0|[0.54050993723494...|[0.63193103415798...|       0.0|\n","| (1986 NA)|             19.85|           0.284809831|           0.636854144|      20831.96221|2.575255396E7|           0|[19.85,0.28480983...|[7.83698661885600...|  0.0|[0.76646923168827...|[0.68275662321693...|       0.0|\n","| (1986 NA)|             19.85|           0.284809831|           0.636854144|      47371.93936|6.229674787E7|           0|[19.85,0.28480983...|[7.83698661885600...|  0.0|[1.29680368784691...|[0.78529655748446...|       0.0|\n","| (1988 NE)|             19.25|           0.375452479|           0.839537266|      21666.06488|6.920547371E7|           0|[19.25,0.37545247...|[7.60010037344978...|  0.0|[2.97176603400338...|[0.95128218802423...|       0.0|\n","| (1989 AZ)|             19.68|           0.308003021|           0.688715693|      28685.53156|3.156917631E7|           0|[19.68,0.30800302...|[7.76986884932424...|  0.0|[1.06409503106230...|[0.74347233300612...|       0.0|\n","| (1989 AZ)|             19.68|           0.308003021|           0.688715693|      30781.22206|3.285793675E7|           0|[19.68,0.30800302...|[7.76986884932424...|  0.0|[1.06965795998861...|[0.74453186383339...|       0.0|\n","| (1989 AZ)|             19.68|           0.308003021|           0.688715693|      39425.17672| 1.17790389E7|           0|[19.68,0.30800302...|[7.76986884932424...|  0.0|[0.49237931897205...|[0.62066677869382...|       0.0|\n","| (1989 AZ)|             19.68|           0.308003021|           0.688715693|       84377.6214|6.062739077E7|           0|[19.68,0.30800302...|[7.76986884932424...|  0.0|[1.09390355297874...|[0.74911607314697...|       0.0|\n","| (1991 GO)|              20.1|           0.253837029|           0.567596853|      47348.72182|3.911070489E7|           1|[20.1,0.253837029...|[7.93568922110860...|  1.0|[0.51318084602280...|[0.62555184249738...|       0.0|\n","| (1991 GO)|              20.1|           0.253837029|           0.567596853|      49370.82427|2.683328561E7|           1|[20.1,0.253837029...|[7.93568922110860...|  1.0|[0.21107676584311...|[0.55257413985663...|       0.0|\n","| (1991 GO)|              20.1|           0.253837029|           0.567596853|      51683.57091|4.476681405E7|           1|[20.1,0.253837029...|[7.93568922110860...|  1.0|[0.59268964024761...|[0.64398203581551...|       0.0|\n","| (1991 GO)|              20.1|           0.253837029|           0.567596853|      59218.01992|1.160244514E7|           1|[20.1,0.253837029...|[7.93568922110860...|  1.0|[-0.2468471794443...|[0.43859966722003...|       1.0|\n","| (1991 GO)|              20.1|           0.253837029|           0.567596853|       60205.2836|5.175974125E7|           1|[20.1,0.253837029...|[7.93568922110860...|  1.0|[0.65516135839673...|[0.65817261861616...|       0.0|\n","|(1991 TF3)|             19.29|           0.368599699|           0.824213984|      48661.69524|1.295306035E7|           0|[19.29,0.36859969...|[7.61589278981019...|  0.0|[1.27459833059677...|[0.78152889002771...|       0.0|\n","|(1991 TF3)|             19.29|           0.368599699|           0.824213984|      62042.52533|2.582239873E7|           0|[19.29,0.36859969...|[7.61589278981019...|  0.0|[1.41564867966039...|[0.80465536020897...|       0.0|\n","|(1991 TF3)|             19.29|           0.368599699|           0.824213984|      84121.55491|5.891952373E7|           0|[19.29,0.36859969...|[7.61589278981019...|  0.0|[1.91813755381330...|[0.87193060276004...|       0.0|\n","| (1991 TT)|              26.0|           0.016770846|           0.037500752|      29075.03173|4.323515075E7|           0|[26.0,0.016770846...|[10.2650706342698...|  0.0|[13.2531994242636...|[0.99999824527986...|       0.0|\n","| (1991 VG)|              28.3|            0.00581507|           0.013002893|      5934.327329|1.178527563E7|           0|[28.3,0.00581507,...|[11.1731345749937...|  0.0|[20.6999277567238...|[0.99999999897638...|       0.0|\n","| (1991 VG)|              28.3|            0.00581507|           0.013002893|      12736.21173|1.204234409E7|           0|[28.3,0.00581507,...|[11.1731345749937...|  0.0|[20.6287086952469...|[0.99999999890082...|       0.0|\n","| (1991 VG)|              28.3|            0.00581507|           0.013002893|       17839.1211|1.910706975E7|           0|[28.3,0.00581507,...|[11.1731345749937...|  0.0|[20.7315479609231...|[0.99999999900824...|       0.0|\n","| (1991 VG)|              28.3|            0.00581507|           0.013002893|      28484.79372|3.408683155E7|           0|[28.3,0.00581507,...|[11.1731345749937...|  0.0|[20.9515794021059...|[0.99999999920412...|       0.0|\n","| (1991 VG)|              28.3|            0.00581507|           0.013002893|       29407.0726|3.517204696E7|           0|[28.3,0.00581507,...|[11.1731345749937...|  0.0|[20.9658083070610...|[0.99999999921536...|       0.0|\n","| (1991 VG)|              28.3|            0.00581507|           0.013002893|      29731.20628|3.551568705E7|           0|[28.3,0.00581507,...|[11.1731345749937...|  0.0|[20.9699504168339...|[0.99999999921861...|       0.0|\n","| (1991 VG)|              28.3|            0.00581507|           0.013002893|      52933.82183|6.810840166E7|           0|[28.3,0.00581507,...|[11.1731345749937...|  0.0|[21.4482386258416...|[0.99999999951566...|       0.0|\n","| (1991 VG)|              28.3|            0.00581507|           0.013002893|      55212.44675|7.096141296E7|           0|[28.3,0.00581507,...|[11.1731345749937...|  0.0|[21.4873006564616...|[0.99999999953421...|       0.0|\n","| (1992 JD)|              25.0|               0.02658|           0.059434687|       27662.1015|1.637138245E7|           0|[25.0,0.02658,0.0...|[9.87026022525945...|  0.0|[9.41260623480811...|[0.99991831890018...|       0.0|\n","| (1992 JD)|              25.0|               0.02658|           0.059434687|      27929.09946|1.709460539E7|           0|[25.0,0.02658,0.0...|[9.87026022525945...|  0.0|[9.42602756571557...|[0.99991940775759...|       0.0|\n","| (1992 JD)|              25.0|               0.02658|           0.059434687|      44081.79918|4.915063434E7|           0|[25.0,0.02658,0.0...|[9.87026022525945...|  0.0|[9.97198640089604...|[0.99995331245305...|       0.0|\n","| (1992 JD)|              25.0|               0.02658|           0.059434687|      51932.04245|6.556088164E7|           0|[25.0,0.02658,0.0...|[9.87026022525945...|  0.0|[10.2562197301798...|[0.99996486296543...|       0.0|\n","|(1993 BD3)|              26.2|           0.015295194|           0.034201093|      56295.71738|5.655256868E7|           0|[26.2,0.015295194...|[10.3440327160719...|  0.0|[13.9149829132796...|[0.99999909468584...|       0.0|\n","|(1993 BU3)|             21.17|           0.155079709|           0.346768771|      22959.68216|4.968892019E7|           0|[21.17,0.15507970...|[8.35813635874970...|  0.0|[1.19770029489343...|[0.76811542613628...|       0.0|\n","| (1993 DA)|              26.4|           0.013949382|           0.031191767|      26747.00796|2.847175453E7|           0|[26.4,0.013949382...|[10.4229947978739...|  0.0|[14.2834087127302...|[0.99999937368308...|       0.0|\n","| (1993 DA)|              26.4|           0.013949382|           0.031191767|      27281.40382| 2.18755888E7|           0|[26.4,0.013949382...|[10.4229947978739...|  0.0|[14.1273543989051...|[0.99999926790469...|       0.0|\n","| (1993 DA)|              26.4|           0.013949382|           0.031191767|      33409.24942|3.468757218E7|           0|[26.4,0.013949382...|[10.4229947978739...|  0.0|[14.3492763140796...|[0.99999941360774...|       0.0|\n","| (1993 HC)|             20.77|           0.186446818|            0.41690776|      42221.79138|3.189212499E7|           0|[20.77,0.18644681...|[8.20021219514555...|  0.0|[0.30418962258917...|[0.57546638404886...|       0.0|\n","| (1993 TZ)|              26.0|           0.016770846|           0.037500752|      37055.17646|  8185174.962|           0|[26.0,0.016770846...|[10.2650706342698...|  0.0|[12.3657333902450...|[0.99999573785350...|       0.0|\n","| (1993 UD)|             20.38|           0.223128464|           0.498930414|      43141.88885|2.885382489E7|           0|[20.38,0.22312846...|[8.04623613563150...|  0.0|[0.18925951630356...|[0.54717415150900...|       0.0|\n","| (1993 UD)|             20.38|           0.223128464|           0.498930414|      49878.55309|5.187102424E7|           0|[20.38,0.22312846...|[8.04623613563150...|  0.0|[0.63635455268433...|[0.65392893802169...|       0.0|\n","| (1993 UD)|             20.38|           0.223128464|           0.498930414|      59576.47024|6.908872502E7|           0|[20.38,0.22312846...|[8.04623613563150...|  0.0|[0.91801569598619...|[0.71463761761486...|       0.0|\n","| (1993 UD)|             20.38|           0.223128464|           0.498930414|      59620.02636|6.952760126E7|           0|[20.38,0.22312846...|[8.04623613563150...|  0.0|[0.92750244227980...|[0.71656831058052...|       0.0|\n","| (1994 BB)|              23.5|           0.053034072|           0.118587791|      6733.241841| 5.63668034E7|           0|[23.5,0.053034072...|[9.27804461174388...|  0.0|[6.13033890469637...|[0.99782888058373...|       0.0|\n","|(1994 CJ1)|             21.54|           0.130784109|           0.292442157|      3888.602813| 5.52554361E7|           1|[21.54,0.13078410...|[8.50421621008354...|  1.0|[1.96735126833436...|[0.87732632864116...|       0.0|\n","|(1994 CJ1)|             21.54|           0.130784109|           0.292442157|      29077.71285|1.426892095E7|           1|[21.54,0.13078410...|[8.50421621008354...|  1.0|[0.74990931813565...|[0.67915893973008...|       0.0|\n","|(1994 CJ1)|             21.54|           0.130784109|           0.292442157|      36870.57628|2.527738003E7|           1|[21.54,0.13078410...|[8.50421621008354...|  1.0|[0.91195377172587...|[0.71339979844186...|       0.0|\n","| (1994 EK)|              20.3|           0.231502122|           0.517654482|      88573.21035|4.601962653E7|           1|[20.3,0.231502122...|[8.01465130291067...|  1.0|[0.08942103401081...|[0.52234037412438...|       0.0|\n","| (1994 GL)|              25.5|           0.021113245|            0.04721065|      24779.92788|6.741791196E7|           0|[25.5,0.021113245...|[10.0676654297646...|  0.0|[12.2078823039228...|[0.99999500906501...|       0.0|\n","| (1994 GL)|              25.5|           0.021113245|            0.04721065|      33475.02417|  3612946.012|           0|[25.5,0.021113245...|[10.0676654297646...|  0.0|[10.6584150813648...|[0.99997649831843...|       0.0|\n","| (1994 GL)|              25.5|           0.021113245|            0.04721065|      33575.75001|  3651620.413|           0|[25.5,0.021113245...|[10.0676654297646...|  0.0|[10.6581533366352...|[0.99997649216633...|       0.0|\n","| (1994 GL)|              25.5|           0.021113245|            0.04721065|      49936.55935|1.828515123E7|           0|[25.5,0.021113245...|[10.0676654297646...|  0.0|[10.8055592084193...|[0.99997971399857...|       0.0|\n","| (1994 GL)|              25.5|           0.021113245|            0.04721065|       53909.5959|2.200315043E7|           0|[25.5,0.021113245...|[10.0676654297646...|  0.0|[10.8450938618376...|[0.99998050033674...|       0.0|\n","+----------+------------------+----------------------+----------------------+-----------------+-------------+------------+--------------------+--------------------+-----+--------------------+--------------------+----------+\n","only showing top 50 rows\n","\n"]}]},{"cell_type":"code","source":["from pyspark.mllib.evaluation import MulticlassMetrics\n","from sklearn.metrics import confusion_matrix\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","# Extract predictions and labels from the DataFrame\n","predictions = lr_predictions.select(\"prediction\").rdd.flatMap(lambda x: x).collect()\n","labels = lr_predictions.select(\"is_hazardous\").rdd.flatMap(lambda x: x).collect()\n","\n","# Create confusion matrix\n","confusion_matrix = confusion_matrix(labels, predictions)\n","\n","# Plot confusion matrix\n","plt.figure(figsize=(8, 6))\n","sns.heatmap(confusion_matrix, annot=True, fmt=\"d\", cmap=\"Blues\")\n","plt.xlabel(\"Predicted Label\")\n","plt.ylabel(\"True Label\")\n","plt.title(\"Confusion Matrix for Logistic Regression\")\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"AtbUw0wzmQtt","executionInfo":{"status":"ok","timestamp":1723617397406,"user_tz":-330,"elapsed":8019,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"887caa8b-f2a2-4ecb-de45-b18b0f59b79f"},"execution_count":40,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# ROC Curve"],"metadata":{"id":"GFvLTi5-mYjN"}},{"cell_type":"code","source":["from pyspark.ml.evaluation import BinaryClassificationEvaluator\n","from pyspark.ml.evaluation import MulticlassClassificationEvaluator\n","import matplotlib.pyplot as plt\n","import numpy as np"],"metadata":{"id":"GXRQPHJWmaQV","executionInfo":{"status":"ok","timestamp":1723617376245,"user_tz":-330,"elapsed":429,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["# ROC Curve and AUC Calculation\n","evaluator = BinaryClassificationEvaluator(rawPredictionCol=\"rawPrediction\", labelCol=\"label\", metricName=\"areaUnderROC\")\n","roc_auc = evaluator.evaluate(lr_predictions)\n","print(f\"Area Under ROC Curve: {roc_auc}\")\n","\n","# Confusion Matrix Calculation\n","evaluator_cm = MulticlassClassificationEvaluator(labelCol=\"label\", predictionCol=\"prediction\", metricName=\"accuracy\")\n","accuracy = evaluator_cm.evaluate(lr_predictions)\n","print(f\"Accuracy: {accuracy:.4f}\")\n","\n","# Convert predictions to Pandas DataFrame for plotting ROC Curve\n","lr_predictions_pd = lr_predictions.select(\"label\", \"probability\").toPandas()\n","from sklearn.metrics import roc_curve, auc\n","\n","y_true = lr_predictions_pd['label']\n","y_scores = lr_predictions_pd['probability'].apply(lambda x: x[1])\n","\n","fpr, tpr, _ = roc_curve(y_true, y_scores)\n","roc_auc = auc(fpr, tpr)\n","\n","plt.figure()\n","plt.plot(fpr, tpr, color='darkorange', lw=2, label='ROC curve (area = %0.2f)' % roc_auc)\n","plt.plot([0, 1], [0, 1], color='navy', lw=2, linestyle='--')\n","plt.xlim([0.0, 1.0])\n","plt.ylim([0.0, 1.05])\n","plt.xlabel('False Positive Rate')\n","plt.ylabel('True Positive Rate')\n","plt.title('ROC Curve')\n","plt.legend(loc='lower right')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":507},"id":"4M-diNtpmaKx","executionInfo":{"status":"ok","timestamp":1723617425464,"user_tz":-330,"elapsed":21395,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"05a8b400-2a45-4b19-a2ae-348851136b42"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["Area Under ROC Curve: 0.8879010381946522\n","Accuracy: 0.8898\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Decision Tree"],"metadata":{"id":"HT_9rSXHmvyW"}},{"cell_type":"code","source":["# Importing Decision Tree Classifier\n","from pyspark.ml.classification import DecisionTreeClassifier\n","from pyspark.ml.evaluation import MulticlassClassificationEvaluator\n","from pyspark.mllib.evaluation import MulticlassMetrics"],"metadata":{"id":"mr0_uHt9maEi","executionInfo":{"status":"ok","timestamp":1723617454575,"user_tz":-330,"elapsed":418,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["neo1 = neo.select(\"absolute_magnitude\", \"estimated_diameter_min\", \"estimated_diameter_max\",\n","                       \"relative_velocity\", \"miss_distance\",\"is_hazardous\")\n","\n","# Convert the boolean column 'is_hazardous' to integer\n","neo1 = neo1.withColumn(\"is_hazardous\", col(\"is_hazardous\").cast(IntegerType()))\n","\n","feature_columns = [col for col in neo1.columns if col != 'is_hazardous']\n","assembler = VectorAssembler(inputCols=feature_columns, outputCol=\"features\")\n","df_assembled = assembler.transform(neo1)\n","\n","# Select only the label and features\n","data = df_assembled.select('is_hazardous', 'features')\n","\n","# Split the data into training and test sets\n","train_data, test_data = data.randomSplit([0.7, 0.3])\n","\n","# Initialize the Decision Tree model\n","dt = DecisionTreeClassifier(labelCol='is_hazardous', featuresCol='features')\n","\n","# Train the model\n","model = dt.fit(train_data)\n","\n","# Make predictions\n","predictions = model.transform(test_data)\n","\n","# Show the predictions\n","predictions.show(50)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RIoAvjyJmZ-b","executionInfo":{"status":"ok","timestamp":1723617503011,"user_tz":-330,"elapsed":40484,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"14640153-01af-420c-a469-aad8ba1d08bc"},"execution_count":43,"outputs":[{"output_type":"stream","name":"stdout","text":["+------------+--------------------+-----------------+--------------------+----------+\n","|is_hazardous|            features|    rawPrediction|         probability|prediction|\n","+------------+--------------------+-----------------+--------------------+----------+\n","|           0|[19.13,0.39678475...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.13,0.39678475...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.13,0.39678475...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.13,0.39678475...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.13,0.39678475...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.13,0.39678475...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.13,0.39678475...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.13,0.39678475...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.13,0.39678475...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.13,0.39678475...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|    [460.0,922.0]|[0.33285094066570...|       1.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.14,0.39496169...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.15,0.39314701...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.15,0.39314701...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","|           0|[19.15,0.39314701...|[49221.0,20093.0]|[0.71011628242490...|       0.0|\n","+------------+--------------------+-----------------+--------------------+----------+\n","only showing top 50 rows\n","\n"]}]},{"cell_type":"code","source":["# Evaluate the model\n","evaluator = MulticlassClassificationEvaluator(labelCol=\"is_hazardous\", predictionCol=\"prediction\", metricName=\"accuracy\")\n","accuracy = evaluator.evaluate(predictions)\n","\n","print(f\"Accuracy: {accuracy:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h891bcJtmZ5U","executionInfo":{"status":"ok","timestamp":1723617508557,"user_tz":-330,"elapsed":5549,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"ca6e60d5-4724-46d0-d3cf-1ee7869deb03"},"execution_count":44,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8977\n"]}]},{"cell_type":"code","source":["# Convert predictions to RDD to use MulticlassMetrics\n","prediction_and_labels = predictions.select(\n","    col('prediction').cast('double'), col('is_hazardous').cast('double')\n",").rdd\n","metrics = MulticlassMetrics(prediction_and_labels)\n","\n","# Calculate Precision, Recall, and F1 Score\n","precision = metrics.precision(1.0)\n","recall = metrics.recall(1.0)\n","f1_score = metrics.fMeasure(1.0)\n","\n","print(f\"Precision: {precision:.4f}\")\n","print(f\"Recall: {recall:.4f}\")\n","print(f\"F1 Score: {f1_score:.4f}\")\n","\n","# Get the Confusion Matrix\n","confusion_matrix = metrics.confusionMatrix().toArray()\n","print(\"Confusion Matrix:\\n\", confusion_matrix)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rVFiTAaAmZzb","executionInfo":{"status":"ok","timestamp":1723617558157,"user_tz":-330,"elapsed":11027,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"a335bb98-1d1f-4fd6-b6d9-c283264c1f4e"},"execution_count":45,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/pyspark/sql/context.py:158: FutureWarning: Deprecated in 3.0.0. Use SparkSession.builder.getOrCreate() instead.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["Precision: 0.7471\n","Recall: 0.1490\n","F1 Score: 0.2485\n","Confusion Matrix:\n"," [[79976.   520.]\n"," [ 8771.  1536.]]\n"]}]},{"cell_type":"code","source":["# Calculate and print Precision, Recall, and F1 Score for each class\n","labels = neo.select(\"is_hazardous\").distinct().rdd.flatMap(lambda x: x).collect()\n","classification_report = []\n","\n","for label in sorted(labels):\n","    # Cast the label to a double\n","    label_double = float(label)\n","\n","    precision = metrics.precision(label_double)\n","    recall = metrics.recall(label_double)\n","    f1_score = metrics.fMeasure(label_double) # Pass label as a double\n","\n","    # Get the count for the label from the predictionAndLabels RDD\n","    support = prediction_and_labels.filter(lambda x: x[1] == label_double).count()\n","\n","    classification_report.append({\n","        \"Class\": label,\n","        \"Precision\": precision,\n","        \"Recall\": recall,\n","        \"F1-Score\": f1_score,\n","        \"Support\": support\n","    })\n","    print(f\"\\nClass {label}:\\nPrecision: {precision:.4f}, Recall: {recall:.4f}, F1 Score: {f1_score:.4f}, Support: {support}\")\n","\n","# Print a formatted classification report\n","print(\"\\nClassification Report:\")\n","print(\"Class\\tPrecision\\tRecall\\tF1-Score\\tSupport\")\n","for entry in classification_report:\n","    print(f\"{entry['Class']}\\t{entry['Precision']:.4f}\\t\\t{entry['Recall']:.4f}\\t{entry['F1-Score']:.4f}\\t\\t{entry['Support']}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xaHzE8gGmZsT","executionInfo":{"status":"ok","timestamp":1723617581983,"user_tz":-330,"elapsed":9167,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"be57ffca-0fab-4d48-a9cd-c6f9153719dd"},"execution_count":46,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Class False:\n","Precision: 0.9012, Recall: 0.9935, F1 Score: 0.9451, Support: 80496\n","\n","Class True:\n","Precision: 0.7471, Recall: 0.1490, F1 Score: 0.2485, Support: 10307\n","\n","Classification Report:\n","Class\tPrecision\tRecall\tF1-Score\tSupport\n","False\t0.9012\t\t0.9935\t0.9451\t\t80496\n","True\t0.7471\t\t0.1490\t0.2485\t\t10307\n"]}]},{"cell_type":"code","source":["# Print out the tree model\n","print(model.toDebugString)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X3L0SpBGmZlV","executionInfo":{"status":"ok","timestamp":1723617585889,"user_tz":-330,"elapsed":448,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"0fa6a295-f16a-4e43-9afc-d067bba9f55c"},"execution_count":47,"outputs":[{"output_type":"stream","name":"stdout","text":["DecisionTreeClassificationModel: uid=DecisionTreeClassifier_9367d67fca72, depth=5, numNodes=17, numClasses=2, numFeatures=5\n","  If (feature 1 <= 0.1046058875)\n","   Predict: 0.0\n","  Else (feature 1 > 0.1046058875)\n","   If (feature 4 <= 1.473856919E7)\n","    If (feature 4 <= 8914015.208999999)\n","     If (feature 0 <= 21.994999999999997)\n","      Predict: 1.0\n","     Else (feature 0 > 21.994999999999997)\n","      If (feature 4 <= 5723149.025)\n","       Predict: 1.0\n","      Else (feature 4 > 5723149.025)\n","       Predict: 0.0\n","    Else (feature 4 > 8914015.208999999)\n","     If (feature 4 <= 1.2099377965E7)\n","      If (feature 3 <= 19461.697529999998)\n","       Predict: 0.0\n","      Else (feature 3 > 19461.697529999998)\n","       Predict: 1.0\n","     Else (feature 4 > 1.2099377965E7)\n","      If (feature 3 <= 19461.697529999998)\n","       Predict: 0.0\n","      Else (feature 3 > 19461.697529999998)\n","       Predict: 1.0\n","   Else (feature 4 > 1.473856919E7)\n","    Predict: 0.0\n","\n"]}]},{"cell_type":"markdown","source":["# Feature Importance"],"metadata":{"id":"SMDrBTyMnX0A"}},{"cell_type":"code","source":["# Get feature importances\n","importances = model.featureImportances\n","\n","# Create a list of feature names (assuming you have them available)\n","feature_names = feature_columns\n","\n","# Print feature importances\n","for feature, importance in zip(feature_names, importances):\n","    print(f\"{feature}: {importance}\")\n","\n","# Plot feature importances\n","plt.figure(figsize=(10, 6))\n","plt.barh(feature_names, importances)\n","plt.xlabel(\"Feature Importance\")\n","plt.ylabel(\"Feature\")\n","plt.title(\"Feature Importance from Decision Tree\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"i3Cb_gelmZKz","executionInfo":{"status":"ok","timestamp":1723617618171,"user_tz":-330,"elapsed":1292,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"8b695add-858d-4df1-b12c-e7d0edfe71c3"},"execution_count":48,"outputs":[{"output_type":"stream","name":"stdout","text":["absolute_magnitude: 0.0013716755779696885\n","estimated_diameter_min: 0.8231892565960013\n","estimated_diameter_max: 0.0\n","relative_velocity: 0.0009419751532316472\n","miss_distance: 0.1744970926727974\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Naive Bayes"],"metadata":{"id":"rGM5PCd-ne6-"}},{"cell_type":"code","source":["# Importing Libraries\n","from pyspark.ml.classification import NaiveBayes\n","from pyspark.ml.evaluation import MulticlassClassificationEvaluator\n","from pyspark.ml.feature import VectorAssembler\n","from pyspark.sql.functions import col\n","from pyspark.sql.types import IntegerType"],"metadata":{"id":"Usb_YSpXnaHq","executionInfo":{"status":"ok","timestamp":1723617646130,"user_tz":-330,"elapsed":427,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}}},"execution_count":49,"outputs":[]},{"cell_type":"code","source":["neo1 = neo.select('absolute_magnitude','estimated_diameter_min','estimated_diameter_max','relative_velocity','miss_distance','is_hazardous')\n","\n","# Convert the boolean column 'is_hazardous' to integer\n","neo1 = neo1.withColumn(\"is_hazardous\", col(\"is_hazardous\").cast(IntegerType()))\n","\n","# Assuming 'label' is the column with binary class and the rest are features\n","feature_columns = neo1.columns[:-1]\n","assembler = VectorAssembler(inputCols=feature_columns, outputCol=\"features\")\n","data = assembler.transform(neo1)\n","data = data.select(\"features\", \"is_hazardous\")\n","\n","train_data, test_data = data.randomSplit([0.7, 0.3], seed=42)\n","\n","nb = NaiveBayes(featuresCol=\"features\", labelCol=\"is_hazardous\", modelType=\"multinomial\")\n","model = nb.fit(train_data)\n","\n","predictions = model.transform(test_data)\n","\n","evaluator = MulticlassClassificationEvaluator(labelCol=\"is_hazardous\", predictionCol=\"prediction\", metricName=\"accuracy\")\n","accuracy = evaluator.evaluate(predictions)\n","print(f\"Test set accuracy = {accuracy:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pLwCDdBKnhJ6","executionInfo":{"status":"ok","timestamp":1723617667859,"user_tz":-330,"elapsed":13862,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"c57a4f65-1613-44e9-dca5-763a33e74b6d"},"execution_count":50,"outputs":[{"output_type":"stream","name":"stdout","text":["Test set accuracy = 0.5814\n"]}]},{"cell_type":"code","source":["from pyspark.ml.classification import NaiveBayes\n","from pyspark.ml.evaluation import MulticlassClassificationEvaluator\n","\n","# Select only the label and features\n","data = df_assembled.select('is_hazardous', 'features')\n","\n","# Split the data into training and test sets\n","train_data, test_data = data.randomSplit([0.7, 0.3])\n","\n","# Create a Naive Bayes model\n","nb = NaiveBayes(labelCol=\"is_hazardous\", featuresCol=\"features\")\n","\n","# Train the model\n","nb_model = nb.fit(train_data)\n","\n","# Make predictions\n","predictions = nb_model.transform(test_data)\n","\n","# Show predictions\n","predictions.select(\"is_hazardous\", \"probability\", \"prediction\").show(50)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Xvzas4K_njLf","executionInfo":{"status":"ok","timestamp":1723617741901,"user_tz":-330,"elapsed":9499,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"59765db5-d6ef-4b2a-cb6b-08660ada43a0"},"execution_count":51,"outputs":[{"output_type":"stream","name":"stdout","text":["+------------+--------------------+----------+\n","|is_hazardous|         probability|prediction|\n","+------------+--------------------+----------+\n","|           0|           [1.0,0.0]|       0.0|\n","|           0|           [0.0,1.0]|       1.0|\n","|           0|           [1.0,0.0]|       0.0|\n","|           0|           [1.0,0.0]|       0.0|\n","|           0|           [1.0,0.0]|       0.0|\n","|           0|           [1.0,0.0]|       0.0|\n","|           0|[8.93503236810452...|       1.0|\n","|           0|           [0.0,1.0]|       1.0|\n","|           0|           [0.0,1.0]|       1.0|\n","|           0|           [0.0,1.0]|       1.0|\n","|           0|           [0.0,1.0]|       1.0|\n","|           0|           [1.0,0.0]|       0.0|\n","|           0|           [1.0,0.0]|       0.0|\n","|           0|           [1.0,0.0]|       0.0|\n","|           0|           [0.0,1.0]|       1.0|\n","|           0|           [1.0,0.0]|       0.0|\n","|           0|           [1.0,0.0]|       0.0|\n","|           0|           [1.0,0.0]|       0.0|\n","|           0|           [1.0,0.0]|       0.0|\n","|           0|           [1.0,0.0]|       0.0|\n","|           0|           [1.0,0.0]|       0.0|\n","|           0|[1.0,1.7335327481...|       0.0|\n","|           0|           [1.0,0.0]|       0.0|\n","|           0|           [0.0,1.0]|       1.0|\n","|           0|           [1.0,0.0]|       0.0|\n","|           0|           [1.0,0.0]|       0.0|\n","|           0|[1.0,6.0010943166...|       0.0|\n","|           0|           [0.0,1.0]|       1.0|\n","|           0|           [0.0,1.0]|       1.0|\n","|           0|           [1.0,0.0]|       0.0|\n","|           0|           [1.0,0.0]|       0.0|\n","|           0|           [1.0,0.0]|       0.0|\n","|           0|           [0.0,1.0]|       1.0|\n","|           0|           [1.0,0.0]|       0.0|\n","|           0|           [0.0,1.0]|       1.0|\n","|           0|           [0.0,1.0]|       1.0|\n","|           0|           [0.0,1.0]|       1.0|\n","|           0|           [0.0,1.0]|       1.0|\n","|           0|[4.50829394409558...|       1.0|\n","|           0|           [0.0,1.0]|       1.0|\n","|           0|[5.67612123712460...|       1.0|\n","|           0|           [1.0,0.0]|       0.0|\n","|           0|           [1.0,0.0]|       0.0|\n","|           0|           [1.0,0.0]|       0.0|\n","|           0|           [0.0,1.0]|       1.0|\n","|           0|           [0.0,1.0]|       1.0|\n","|           0|           [0.0,1.0]|       1.0|\n","|           0|           [0.0,1.0]|       1.0|\n","|           0|           [0.0,1.0]|       1.0|\n","|           0|[3.07185149345902...|       1.0|\n","+------------+--------------------+----------+\n","only showing top 50 rows\n","\n"]}]},{"cell_type":"markdown","source":["# Random Forest Algorithm"],"metadata":{"id":"cXcCUFWen8-O"}},{"cell_type":"code","source":["from pyspark.ml.classification import RandomForestClassifier\n","\n","# Select only the label and features\n","data = df_assembled.select('is_hazardous', 'features')\n","\n","# Split the data into training and test sets\n","train_data, test_data = data.randomSplit([0.7, 0.3])\n","\n","# Create a Random Forest model\n","rf = RandomForestClassifier(labelCol=\"is_hazardous\", featuresCol=\"features\", numTrees=100)\n","\n","# Train the model\n","rf_model = rf.fit(train_data)\n","\n","# Make predictions\n","predictions = rf_model.transform(test_data)\n","\n","# Evaluate the model\n","evaluator = MulticlassClassificationEvaluator(labelCol=\"is_hazardous\", predictionCol=\"prediction\", metricName=\"accuracy\")\n","accuracy = evaluator.evaluate(predictions)\n","print(f\"Accuracy: {accuracy:.4f}\")\n","\n","# Show predictions\n","predictions.select(\"is_hazardous\", \"probability\", \"prediction\").show(50)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"m54XYaGpn2Ue","executionInfo":{"status":"ok","timestamp":1723617838166,"user_tz":-330,"elapsed":56806,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"41464d7b-2cb8-4aec-ab68-9147ce05d2b1"},"execution_count":52,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8984\n","+------------+--------------------+----------+\n","|is_hazardous|         probability|prediction|\n","+------------+--------------------+----------+\n","|           0|[0.79183772352880...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.79183772352880...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.37357492889281...|       1.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.71361230609406...|       0.0|\n","|           0|[0.79183772352880...|       0.0|\n","+------------+--------------------+----------+\n","only showing top 50 rows\n","\n"]}]},{"cell_type":"code","source":["# Convert predictions to RDD to use MulticlassMetrics\n","prediction_and_labels = predictions.select(\n","    col('prediction').cast('double'), col('is_hazardous').cast('double')\n",").rdd\n","metrics = MulticlassMetrics(prediction_and_labels)\n","\n","# Calculate Precision, Recall, and F1 Score\n","precision = metrics.precision(1.0)\n","recall = metrics.recall(1.0)\n","f1_score = metrics.fMeasure(1.0)\n","\n","print(f\"Precision: {precision:.4f}\")\n","print(f\"Recall: {recall:.4f}\")\n","print(f\"F1 Score: {f1_score:.4f}\")\n","\n","# Get the Confusion Matrix\n","confusion_matrix = metrics.confusionMatrix().toArray()\n","print(\"Confusion Matrix:\\n\", confusion_matrix)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2bw7G2JVoCRw","executionInfo":{"status":"ok","timestamp":1723617848019,"user_tz":-330,"elapsed":9869,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"c0e3727d-17fa-4cb3-b0f2-1c87ca8c1e85"},"execution_count":53,"outputs":[{"output_type":"stream","name":"stdout","text":["Precision: 0.7244\n","Recall: 0.1552\n","F1 Score: 0.2556\n","Confusion Matrix:\n"," [[80010.   603.]\n"," [ 8627.  1585.]]\n"]}]},{"cell_type":"code","source":["# Calculate and print Precision, Recall, and F1 Score for each class\n","labels = neo.select(\"is_hazardous\").distinct().rdd.flatMap(lambda x: x).collect()\n","classification_report = []\n","\n","for label in sorted(labels):\n","    # Cast the label to a double\n","    label_double = float(label)\n","\n","    precision = metrics.precision(label_double)\n","    recall = metrics.recall(label_double)\n","    f1_score = metrics.fMeasure(label_double)\n","\n","    # Get the count for the label from the predictionAndLabels RDD\n","    support = prediction_and_labels.filter(lambda x: x[1] == label_double).count()\n","\n","    classification_report.append({\n","        \"Class\": label,\n","        \"Precision\": precision,\n","        \"Recall\": recall,\n","        \"F1-Score\": f1_score,\n","        \"Support\": support\n","    })\n","    print(f\"\\nClass {label}:\\nPrecision: {precision:.4f}, Recall: {recall:.4f}, F1 Score: {f1_score:.4f}, Support: {support}\")\n","\n","# Print a formatted classification report\n","print(\"\\nClassification Report:\")\n","print(\"Class\\tPrecision\\tRecall\\tF1-Score\\tSupport\")\n","for entry in classification_report:\n","    print(f\"{entry['Class']}\\t{entry['Precision']:.4f}\\t\\t{entry['Recall']:.4f}\\t{entry['F1-Score']:.4f}\\t\\t{entry['Support']}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zAOnRM0hoEwF","executionInfo":{"status":"ok","timestamp":1723617856590,"user_tz":-330,"elapsed":8590,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"3e3a19a9-96bc-45c2-f843-f460e541a30c"},"execution_count":54,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Class False:\n","Precision: 0.9027, Recall: 0.9925, F1 Score: 0.9455, Support: 80613\n","\n","Class True:\n","Precision: 0.7244, Recall: 0.1552, F1 Score: 0.2556, Support: 10212\n","\n","Classification Report:\n","Class\tPrecision\tRecall\tF1-Score\tSupport\n","False\t0.9027\t\t0.9925\t0.9455\t\t80613\n","True\t0.7244\t\t0.1552\t0.2556\t\t10212\n"]}]},{"cell_type":"code","source":["# Get feature importances from the Random Forest model\n","importances = rf_model.featureImportances\n","\n","# Create a list of feature names (assuming you have this defined somewhere)\n","feature_names = feature_columns\n","\n","# Print feature importances\n","for feature, importance in zip(feature_names, importances):\n","    print(f\"{feature}: {importance}\")\n","\n","# Plot feature importances\n","import matplotlib.pyplot as plt\n","plt.figure(figsize=(10, 6))\n","plt.barh(feature_names, importances)\n","plt.xlabel(\"Feature Importance\")\n","plt.ylabel(\"Feature\")\n","plt.title(\"Feature Importance from Random Forest\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"q_pD1waBoHhL","executionInfo":{"status":"ok","timestamp":1723617856590,"user_tz":-330,"elapsed":13,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"dcbf971c-09c6-412e-f36c-28b264240fa2"},"execution_count":55,"outputs":[{"output_type":"stream","name":"stdout","text":["absolute_magnitude: 0.05772795165429495\n","estimated_diameter_min: 0.5119341439237534\n","estimated_diameter_max: 0.25573348915305893\n","relative_velocity: 0.015503281929379583\n","miss_distance: 0.15910113333951328\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Support Vector Machine"],"metadata":{"id":"Hdx0oE7Koewu"}},{"cell_type":"code","source":["# prompt: SVM Classifier\n","\n","from pyspark.ml.classification import LinearSVC\n","\n","# Select only the label and features\n","data = df_assembled.select('is_hazardous', 'features')\n","\n","# Split the data into training and test sets\n","train_data, test_data = data.randomSplit([0.7, 0.3])\n","\n","# Create a LinearSVC model\n","svm = LinearSVC(labelCol=\"is_hazardous\", featuresCol=\"features\", maxIter=100, regParam=0.1)\n","\n","# Train the model\n","svm_model = svm.fit(train_data)\n","\n","# Make predictions\n","predictions = svm_model.transform(test_data)\n","\n","# Evaluate the model\n","evaluator = MulticlassClassificationEvaluator(labelCol=\"is_hazardous\", predictionCol=\"prediction\", metricName=\"accuracy\")\n","accuracy = evaluator.evaluate(predictions)\n","print(f\"Accuracy: {accuracy:.4f}\")\n","\n","# Show predictions\n","predictions.select(\"is_hazardous\", \"prediction\").show(50)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7yfvIJ04oeX8","executionInfo":{"status":"ok","timestamp":1723617976106,"user_tz":-330,"elapsed":53711,"user":{"displayName":"Hemant Bhamare","userId":"06604682554127413673"}},"outputId":"029696ef-a62d-4d3a-a537-5452ec5b469e"},"execution_count":56,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8859\n","+------------+----------+\n","|is_hazardous|prediction|\n","+------------+----------+\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","|           0|       0.0|\n","+------------+----------+\n","only showing top 50 rows\n","\n"]}]},{"cell_type":"markdown","source":["# Accuracies of All the Applied Models\n","# 1) Random Forest Algorithm ----> 89.84%\n","# 2) Decision Tree Algorithm ----> 89.77%\n","# 3) Logistic Regression     ----> 88.99%\n","# 4) ROC Curve               ----> 88.98%\n","# 5) Support Vector Machine  ----> 88.59%\n","# 6) Naive Bayes             ----> 58.14%"],"metadata":{"id":"vVLQ1kaOoax0"}},{"cell_type":"code","source":[],"metadata":{"id":"QYx8JO6roPMD"},"execution_count":null,"outputs":[]}]}